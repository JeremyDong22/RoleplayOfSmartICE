// Parse and organize workflow tasks from the markdown
export interface WorkflowPeriod {
  id: string
  name: string
  displayName: string
  startTime: string
  endTime: string
  tasks: {
    manager: TaskTemplate[]
    chef: TaskTemplate[]
    dutyManager?: TaskTemplate[]  // 新增值班经理任务
  }
}

export interface TaskTemplate {
  id: string
  title: string
  description: string
  isNotice?: boolean
  role: 'Manager' | 'Chef' | 'DutyManager'  // 新增值班经理角色
  department: '前厅' | '后厨'
  uploadRequirement?: '拍照' | '录音' | '记录' | '列表' | '审核' | null  // 新增审核类型
  timeSlot?: string  // Optional, for display purposes
  startTime?: string // Optional, for display purposes
  endTime?: string   // Optional, for display purposes
  isFloating?: boolean      // 标识为浮动任务
  floatingType?: 'daily' | 'anytime'  // daily=每天一次，anytime=随时可做
  prerequisiteFor?: string[] // 作为哪些时间段的前置条件
  prerequisiteTrigger?: 'last-customer-left-lunch' | 'last-customer-left-dinner'  // 新增触发条件
  linkedTasks?: string[]  // 审核任务关联的任务ID列表
  autoGenerated?: boolean  // 标记是否为自动生成的任务
}

// Define all workflow periods with tasks
export const workflowPeriods: WorkflowPeriod[] = [
  {
    id: 'opening',
    name: 'opening',
    displayName: '开店',
    startTime: '10:00',
    endTime: '10:30',
    tasks: {
      manager: [
        {
          id: 'opening-manager-1',
          title: '召开早会',
          description: '清点人数，记录未到岗人员，工作定岗',
          timeSlot: 'opening',
          startTime: '10:00',
          endTime: '10:10',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '记录',
        },
        {
          id: 'opening-manager-2',
          title: '开店准备与设备检查',
          description: '检查各设备运转情况，损坏情况，能源（水电气）',
          timeSlot: 'opening',
          startTime: '10:10',
          endTime: '10:15',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '列表',
        },
      ],
      chef: [
        {
          id: 'opening-chef-1',
          title: '开店准备与设备检查',
          description: '检查各设备运转情况，损坏情况，能源（水电气）',
          timeSlot: 'opening',
          startTime: '10:00',
          endTime: '10:15',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '列表',
        },
      ],
    },
  },
  {
    id: 'lunch-prep',
    name: 'lunch-prep',
    displayName: '餐前准备（午市）',
    startTime: '10:30',
    endTime: '11:25',
    tasks: {
      manager: [
        {
          id: 'lunch-prep-manager-1',
          title: '开市寻店验收 - 卫生',
          description: '外摆区；吧台区；出餐口区；大厅区；卫生间区；包间区',
          timeSlot: 'lunch-prep',
          startTime: '10:30',
          endTime: '11:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
        {
          id: 'lunch-prep-manager-2',
          title: '开市寻店验收 - 物资准备',
          description: '外摆区；吧台区；卫生间区',
          timeSlot: 'lunch-prep',
          startTime: '10:30',
          endTime: '11:15',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '列表',
        },
      ],
      chef: [
        {
          id: 'lunch-prep-chef-1',
          title: '食品安全检查',
          description: '原材料效期检查，临期或过期变质的原材料半成品需进行记录并处理',
          timeSlot: 'lunch-prep',
          startTime: '10:30',
          endTime: '10:45',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'lunch-prep-chef-2',
          title: '食材准备',
          description: '根据当日预估销售额与桌数进行备货',
          timeSlot: 'lunch-prep',
          startTime: '10:30',
          endTime: '11:30',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'lunch-prep-chef-3',
          title: '开始巡店验收',
          description: '根据检查清单逐一检查确保开市工作准备完毕',
          timeSlot: 'lunch-prep',
          startTime: '11:15',
          endTime: '11:25',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
      ],
    },
  },
  {
    id: 'lunch-service',
    name: 'lunch-service',
    displayName: '餐中运营（午市）',
    startTime: '11:30',
    endTime: '14:00',
    tasks: {
      manager: [
        {
          id: 'lunch-service-manager-1',
          title: '岗位监督管理',
          description: '确保各岗位在岗位区域内，防止人员脱岗离岗',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-manager-2',
          title: '客户满意度巡查',
          description: '定期巡台观察客人用餐满意度，剖菜情况并进行桌访搜集客人意见，预防客诉问题发生',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-manager-3',
          title: '人员调度管理',
          description: '根据门店情况临时进行人员调动补位',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-manager-4',
          title: '数据维护推广',
          description: '执行日常数据维护工作，如引导评论，引导线上团购',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-manager-5',
          title: '高峰期协调管理',
          description: '排队数量超过15桌时，协调现场提高翻台速度（加速出餐、翻台清洁、巡台撤盘等工作）',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
      ],
      chef: [
        {
          id: 'lunch-service-chef-1',
          title: '出品质量监控',
          description: '餐中提醒各岗位按标准出品，出品时进行随机检查',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-chef-2',
          title: '厨房运营巡查',
          description: '定期巡厨房查看各岗位工作情况，防止压单、丢单、操作混乱、原料交叉污染等情况',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-chef-3',
          title: '异常情况处理',
          description: '遇异常情况，及时通知人员进行协助解决并与前厅沟通预防出餐慢导致客诉',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'lunch-service-chef-4',
          title: '高峰期备货管理',
          description: '高峰日可提前在无出餐压力的情况下，进行部分原材料备货工作',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
      ],
    },
  },
  {
    id: 'lunch-closing',
    name: 'lunch-closing',
    displayName: '餐后收市（午市）',
    startTime: '14:00',
    endTime: '14:30',
    tasks: {
      manager: [
        {
          id: 'lunch-closing-manager-1',
          title: '收市清洁检查',
          description: '遵循先收市再休息原则，安排人员进行卫生清扫，原材料半成品收纳',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
        {
          id: 'lunch-closing-manager-2',
          title: '能源管理',
          description: '关闭非必要电器与能源，减少消耗',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'lunch-closing-manager-3',
          title: '营业款核对',
          description: '确保收银区域结清最后一桌客人的账款',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
      ],
      chef: [
        {
          id: 'lunch-closing-chef-1',
          title: '收市清洁检查',
          description: '遵循先收市再休息原则，安排人员进行卫生清扫，原材料半成品收纳',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'lunch-closing-chef-2',
          title: '能源管理',
          description: '关闭非必要电器与能源，减少消耗',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'lunch-closing-chef-3',
          title: '员工用餐安排',
          description: '安排午餐与午休',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
      ],
      dutyManager: [
        {
          id: 'lunch-duty-manager-1',
          title: '能源管理',
          description: '检查空调设置，调整照明系统',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'DutyManager',
          department: '前厅',
          uploadRequirement: '拍照',
          prerequisiteTrigger: 'last-customer-left-lunch',
        },
        {
          id: 'lunch-duty-manager-2',
          title: '营业款核对',
          description: '核对午市营业额，确认收款记录',
          timeSlot: 'lunch-closing',
          startTime: '14:00',
          endTime: '14:30',
          role: 'DutyManager',
          department: '前厅',
          uploadRequirement: '拍照',
          prerequisiteTrigger: 'last-customer-left-lunch',
        },
      ],
    },
  },
  {
    id: 'dinner-prep',
    name: 'dinner-prep',
    displayName: '餐前准备（晚市）',
    startTime: '16:30',
    endTime: '17:00',
    tasks: {
      manager: [
        {
          id: 'dinner-prep-manager-1',
          title: '召开午会',
          description: '召集门店伙伴开展早会，清点到岗人数，总结问题，安排分工',
          timeSlot: 'dinner-prep',
          startTime: '16:30',
          endTime: '16:35',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '记录',
        },
        {
          id: 'dinner-prep-manager-2',
          title: '开市寻店验收 - 卫生',
          description: '外摆区；吧台区；出餐口区；大厅区；卫生间区；包间区',
          timeSlot: 'dinner-prep',
          startTime: '16:35',
          endTime: '16:50',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
        {
          id: 'dinner-prep-manager-3',
          title: '开市寻店验收 - 物资准备',
          description: '外摆区；吧台区；卫生间区',
          timeSlot: 'dinner-prep',
          startTime: '16:35',
          endTime: '16:50',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '列表',
        },
      ],
      chef: [
        {
          id: 'dinner-prep-chef-1',
          title: '召开午会',
          description: '召集门店伙伴开展早会，清点到岗人数，总结问题，安排分工',
          timeSlot: 'dinner-prep',
          startTime: '16:30',
          endTime: '16:35',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'dinner-prep-chef-2',
          title: '食品安全检查',
          description: '原材料效期检查，原材料及半成品保存情况检查，临期或过期变质的原材料半成品成品需进行记录并处理',
          timeSlot: 'dinner-prep',
          startTime: '16:35',
          endTime: '16:40',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'dinner-prep-chef-3',
          title: '食材准备',
          description: '根据预估销售额与桌数备货',
          timeSlot: 'dinner-prep',
          startTime: '16:35',
          endTime: '16:50',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'dinner-prep-chef-4',
          title: '巡店验收',
          description: '检查确保晚市准备完毕',
          timeSlot: 'dinner-prep',
          startTime: '16:50',
          endTime: '16:55',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
      ],
    },
  },
  {
    id: 'dinner-service',
    name: 'dinner-service',
    displayName: '餐中运营（晚市）',
    startTime: '17:00',
    endTime: '21:30',
    tasks: {
      manager: [
        {
          id: 'dinner-service-manager-1',
          title: '岗位监督管理',
          description: '确保各岗位在岗位区域内，防止人员脱岗离岗',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-manager-2',
          title: '客户满意度巡查',
          description: '定期巡台观察客人用餐满意度，剖菜情况并进行桌访搜集客人意见，预防客诉问题发生',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-manager-3',
          title: '人员调度管理',
          description: '根据门店情况临时进行人员调动补位',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-manager-4',
          title: '数据维护推广',
          description: '执行日常数据维护工作，如引导评论，引导线上团购',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-manager-5',
          title: '高峰期协调管理',
          description: '排队数量超过15桌时，协调现场提高翻台速度（加速出餐、翻台清洁、巡台撤盘等工作）',
          isNotice: true,
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
      ],
      chef: [
        {
          id: 'dinner-service-chef-1',
          title: '出品质量监控',
          description: '餐中提醒各岗位按标准出品，出品时进行随机检查',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-chef-2',
          title: '厨房运营巡查',
          description: '定期巡厨房查看各岗位工作情况，防止压单、丢单、操作混乱、原料交叉污染等情况',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-chef-3',
          title: '异常情况处理',
          description: '遇异常情况，及时通知人员进行协助解决并与前厅沟通预防出餐慢导致客诉',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
        {
          id: 'dinner-service-chef-4',
          title: '次日备货准备',
          description: '高峰日可提前在无出餐压力的情况下，进行第二天部分原材料备货工作',
          isNotice: true,
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
      ],
    },
  },
  {
    id: 'pre-closing',
    name: 'pre-closing',
    displayName: '预打烊（晚市）',
    startTime: '21:30',
    endTime: '22:00',
    tasks: {
      manager: [
        {
          id: 'pre-closing-manager-1',
          title: '收市准备',
          description: '先收市再休息，提前安排人员进行卫生清扫、原材料半成品收纳保存、物资物品收纳等工作',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
        {
          id: 'pre-closing-manager-2',
          title: '值班安排',
          description: '安排值班人员',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '记录',
        },
      ],
      chef: [
        {
          id: 'pre-closing-chef-1',
          title: '食材下单',
          description: '检查当日库存情况，制定第二天的食材用量',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'pre-closing-chef-2',
          title: '收市准备',
          description: '先收市再休息，提前安排人员进行卫生清扫、原材料半成品收纳保存、物资物品收纳等工作',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'pre-closing-chef-3',
          title: '值班安排',
          description: '安排值班人员',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '记录',
        },
        {
          id: 'pre-closing-chef-4',
          title: '损耗称重',
          description: '记录每份食材损耗重量',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: '拍照',
        },
        {
          id: 'pre-closing-chef-5',
          title: '用餐安排',
          description: '其他人员陆续进行晚餐就餐',
          isNotice: false,
          timeSlot: 'pre-closing',
          startTime: '21:30',
          endTime: '22:00',
          role: 'Chef',
          department: '后厨',
          uploadRequirement: null,
        },
      ],
    },
  },
  {
    id: 'closing',
    name: 'closing',
    displayName: '闭店',
    startTime: '22:00',
    endTime: '23:00',
    tasks: {
      manager: [
        {
          id: 'closing-manager-1',
          title: '收据清点保管',
          description: '清点当日收据并存放至指定位置保管',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'closing-manager-2',
          title: '营业数据记录',
          description: '打印交班单并填写日营业报表数据',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
        {
          id: 'closing-manager-3',
          title: '现金清点保管',
          description: '清点现金保存至指定位置',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: null,
        },
        {
          id: 'closing-manager-4',
          title: '当日复盘总结',
          description: '门店管理层进行5分钟左右当日问题复盘与总结为第二天晨会做准备',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '录音',
        },
        {
          id: 'closing-manager-5',
          title: '能源安全检查',
          description: '关闭并检查门店水电气能源，确保门店能源安全',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
        {
          id: 'closing-manager-6',
          title: '安防闭店检查',
          description: '锁好抽屉、门窗进行闭店上报，确保无明火，安防系统开启',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'Manager',
          department: '前厅',
          uploadRequirement: '拍照',
        },
      ],
      chef: [],
      dutyManager: [
        {
          id: 'closing-duty-manager-1',
          title: '能源安全检查',
          description: '关闭所有用电设备，检查燃气阀门，确认总电源状态',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'DutyManager',
          department: '前厅',
          uploadRequirement: '拍照',
          prerequisiteTrigger: 'last-customer-left-dinner',
        },
        {
          id: 'closing-duty-manager-2',
          title: '安防闭店检查',
          description: '门窗锁闭确认，监控系统启动，报警系统设置',
          timeSlot: 'closing',
          startTime: '22:00',
          endTime: '23:00',
          role: 'DutyManager',
          department: '前厅',
          uploadRequirement: '拍照',
          prerequisiteTrigger: 'last-customer-left-dinner',
        },
      ],
    },
  },
]

// Get current workflow period based on time
export function getCurrentPeriod(testTime?: Date): WorkflowPeriod | null {
  const now = testTime || new Date()
  const currentHour = now.getHours()
  const currentMinute = now.getMinutes()
  const currentTimeInMinutes = currentHour * 60 + currentMinute
  
  for (const period of workflowPeriods) {
    const [startHour, startMinute] = period.startTime.split(':').map(Number)
    const [endHour, endMinute] = period.endTime.split(':').map(Number)
    const startInMinutes = startHour * 60 + startMinute
    const endInMinutes = endHour * 60 + endMinute

    if (currentTimeInMinutes >= startInMinutes && currentTimeInMinutes < endInMinutes) {
      return period
    }
  }

  // If no period matches, we're outside business hours
  return null
}

// Get the next upcoming period
export function getNextPeriod(testTime?: Date): WorkflowPeriod | null {
  const now = testTime || new Date()
  const currentHour = now.getHours()
  const currentMinute = now.getMinutes()
  const currentTimeInMinutes = currentHour * 60 + currentMinute

  for (const period of workflowPeriods) {
    const [startHour, startMinute] = period.startTime.split(':').map(Number)
    const startInMinutes = startHour * 60 + startMinute

    if (currentTimeInMinutes < startInMinutes) {
      return period
    }
  }

  // If we're past all periods, return tomorrow's first period
  return workflowPeriods[0]
}

// Load workflow periods (for compatibility)
export function loadWorkflowPeriods(): WorkflowPeriod[] {
  return workflowPeriods
}

// Define floating tasks that are independent of time periods
export const floatingTasks: TaskTemplate[] = [
  {
    id: 'floating-receiving',
    title: '收货验货',
    description: '每种原材料上称称重、和送货单核对，误差在±2%以内，同时检查原材料质量情况',
    role: 'Chef',
    department: '后厨',
    uploadRequirement: '拍照',
    isFloating: true,
    floatingType: 'daily',
    prerequisiteFor: ['opening', 'lunch-prep', 'lunch-service', 'lunch-closing', 'dinner-prep', 'dinner-service', 'pre-closing']
  },
  {
    id: 'floating-meat-processing',
    title: '交割损耗称重',
    description: '收货验货后，对肉类进行交割处理（去除淋巴等），并称重记录损耗率',
    role: 'Chef',
    department: '后厨',
    uploadRequirement: '拍照',
    isFloating: true,
    floatingType: 'daily',
    prerequisiteFor: ['opening', 'lunch-prep', 'lunch-service', 'lunch-closing', 'dinner-prep', 'dinner-service', 'pre-closing']
  }
]

// Get all floating tasks for a specific role
export function getFloatingTasks(role: 'Manager' | 'Chef' | 'DutyManager'): TaskTemplate[] {
  return floatingTasks.filter(task => task.role === role)
}

// Get business status based on current time
export function getBusinessStatus(testTime?: Date): {
  status: 'closed' | 'opening' | 'operating' | 'closing'
  message: string
  period: WorkflowPeriod | null
  nextPeriod: WorkflowPeriod | null
} {
  const currentPeriod = getCurrentPeriod(testTime)
  const nextPeriod = getNextPeriod(testTime)
  
  if (!currentPeriod) {
    return {
      status: 'closed',
      message: '休息中',
      period: null,
      nextPeriod
    }
  }
  
  let status: 'closed' | 'opening' | 'operating' | 'closing' = 'operating'
  let message = currentPeriod.displayName
  
  if (currentPeriod.id === 'opening') {
    status = 'opening'
  } else if (currentPeriod.id === 'closing' || currentPeriod.id === 'pre-closing') {
    status = 'closing'
  } else {
    status = 'operating'
  }
  
  return {
    status,
    message,
    period: currentPeriod,
    nextPeriod
  }
}